<template>
	<div class="pure-upload__container { drag ? 'pure-upload--drag' : '' }">
		{#if drag}
			<div class="pure-upload-dragger" on-click={this.upload()}>
				<i class="pure-icon pure-icon--di di-upload "></i>
				<div class="pure-upload__text">
					将文件拖到此处，或<span>点击上传</span>
				</div>
			</div>
			{#if multiple}
			<input multiple ref=input type="file" class="pure-upload-input">
			{#else}
			<input ref=input type="file" class="pure-upload-input">
			{/if}
		{#else}
			<Button primary sm on-click={this.upload()}>点击上传</Button>
			{#if multiple}
			<input multiple ref=input type="file" class="pure-upload-input">
			{#else}
			<input ref=input type="file" class="pure-upload-input">
			{/if}
			{#inc this.$body}
			<ul class="{ showFileList=='true' ? 'pure-upload-list' : 'pure-upload-list-none' }">
			{#list fileList as item}
				<li class="pure-upload-list__item">
					<a class="pure-upload-list__item-name">
						<i class="pure-icon pure-icon--di di-file "></i>
						<span>{item.name}</span>
					</a>
					<label class="pure-upload-list__item-icon">
						<i class="pure-icon pure-icon--di {item.status=='success' ? 'di-success': ''}"></i>
						<i class="pure-icon pure-icon--di di-close"></i>
					</label>
				</li>
			{/list}
			</ul>
		{/if}
	</div>
</template>

<script>
	import Button from 'pure-button'
	import ProgressBar from 'pure-button'
	import ProgressCircle from 'pure-button'
	
	export default {
		components: {
			Button,
			ProgressBar,
			ProgressCircle
		},
		config(data) {
			// [drag, multiple, showFileList]
			this.data.showFileList = data.showFileList||true;
			this.data.fileList= [{
		          name: 'pic1.jpeg',
		          url: '',
		          status: 'success'
		        }, {
		          name: 'pic2.jpeg',
		          url: '',
		          status: 'success'
		        }]
		},
		upload() {
			this.$refs.input.click();
			if(!this.isAlreadyBinding){
				this.inputChange();
			}
		},
		inputChange() {
			var input = this.$refs.input;
			var self = this;
			this.isAlreadyBinding = true;
			input.addEventListener('change',function(evt) {
				var files = this.files;
				if(files) {
					self.checkFiles(files)
				}
			});
		},
		checkFiles(files) {
			let i = 0;
			var loopUpload = function() {
				if(files[i]) {
					var reader = new FileReader();
					if(!/image\/\w+/.test(files[i].type)){
			            alert('请上传图片格式');
			            return false;
			        }
					reader.onload = function() {
						// var Img = document.createElement('img');
						// Img.src = reader.result;
						// document.body.appendChild(Img);
						i++;
						loopUpload();
					};
					reader.readAsDataURL(files[i]);
				}
				
			};
			loopUpload();




			/*for(var i = 0,l = files.length; i < l;i++){
				var reader = new FileReader();
				reader.onload = function() {
					reader.readAsDataURL(file[i]);
				};

				// console.log(reader);
			}*/
		}
	};
</script>
